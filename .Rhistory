geom_bar()
ggMEPne <-
ggplot(Mneutral, aes_string(x = Attribute)) + ggtitle("Microsoft") +
geom_bar()
grid.arrange(ggMEPne,ggSBPne,ggGEPne, nrow = 3)
}
NeutralBars(Attribute = "bg")
#Find missing player
nrow(GEP)
nrow(MEP)
nrow(SBP)
dupe <- subset(duplicated(SBP$aname))
J2ne<-J2 %>% rowwise() %>%
mutate(SEneutral = ifelse(SEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(MEneutral = ifelse(MEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(GEneutral = ifelse(GEmotion=="neutral", "neutral","non-neutral"))
S4 <- select(SBP, FileName = aname, Skybiometry = neutral)
S5 <- select(MEP, FileName, Microsoft = neutral)
S6 <- select(GEP, FileName, Google = neutral)
J3 <- full_join(S4, S5, by = "FileName")
J4 <- full_join(J3, S6, by = "FileName")
J4 <- J4 %>% rowwise %>% mutate(GoogleJitter = jitter(Google))
library(GGally)
ggscatmat(as.data.frame(na.omit(J4[,c(2:3,5)])))
table(J2ne$MEmotion, J2$GEmotion)
table(J2ne$MEneutral, J2ne$GEneutral)
DEne<-DE %>% rowwise() %>%
mutate(SEneutral = ifelse(SEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(MEneutral = ifelse(MEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(GEneutral = ifelse(GEmotion=="neutral", "neutral","non-neutral"))
S4 <- select(SBP, FileName = aname, Skybiometry = neutral)
S5 <- select(MEP, FileName, Microsoft = neutral)
S6 <- select(GEP, FileName, Google = neutral)
J3 <- full_join(S4, S5, by = "FileName")
J4 <- full_join(J3, S6, by = "FileName")
J4 <- J4 %>% rowwise %>% mutate(GoogleJitter = jitter(Google))
library(GGally)
ggscatmat(as.data.frame(na.omit(J4[,c(2:3,5)])))
View(J4)
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])))
Neut <- J4 %>% rowwise %>% mutate(GoogleJitter = jitter(Google))
library(GGally)
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])))
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])), alpha = 0.7)
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])), alpha = 0.5)
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])), alpha = 0.4)
View(MEPCL)
View(DEne)
ftable(DEne$GEneutral, DEne$SEneutral, DEne$MEneutral, dnn = c("Google", "Skybiometry", "Microsoft"))
ftable( DEne$SEneutral, DEne$GEneutral, DEne$MEneutral, dnn = c( "Skybiometry", "Google","Microsoft"))
ftable(DE$GEmotion, DE$SEmotion, DE$MEmotion, dnn = c("Google", "Skybiometry", "Microsoft"))
ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
ft<-ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
knitr::kable(ft)
knitr::kable(as.df(ft)
knitr::kable(as.df(ft))
knitr::kable(as.data.frame(ft))
knitr::kable(as.matrix(ft))
ft<-ftable(DE$GEmotion, DE$SEmotion, DE$MEmotion, dnn = c("Google", "Skybiometry", "Microsoft"))
knitr::kable(as.matrix(ft))
ft<-ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
knitr::kable(as.matrix(ft), longtable=TRUE, booktabs = TRUE, caption="This shows the agreement between the emotions recognised by Microsoft and Skybiometry")
ft<-ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
ft
S4 <- select(SBP, FileName = aname, Skybiometry = neutral)
S5 <- select(MEP, FileName, Microsoft = neutral)
S6 <- select(GEP, FileName, Google = neutral)
J4 <- full_join(J3, S6, by = "FileName")
library(GGally)
ggscatmat(as.data.frame(na.omit(Neut[,c(2:4)])), alpha = 0.4)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache=TRUE)
library(tidyverse)
library(dplyr)
library(readr)
library(GGally)
library(magick)
library(grid)
library(gridExtra)
library(ggplot2)
#Read in data files
ME <- read_csv("data/MicrosoftEmotions.csv")
SB <- read_csv("data/SkybiometryEmotions.csv")
GE <- read_csv("data/GoogleFacesEmotions.csv")
GF <- read_csv("data/GoogleFaces.csv")
DE <- read_csv("data/DominantEmotion.csv")
#
# MEP <- read_csv("data/MicrosoftEmotions.csv")
# SBP <- read_csv("data/SkybiometryEmotions.csv")
# GEP <- read_csv("data/GoogleFacesEmotions.csv")
EmotionSoftwareSpecs <- read_csv("Figures/EmotionSoftwareSpecifications.csv")
#Create normalised SB values
SB <- SB %>%
rowwise %>% mutate(z = (anger.confidence+
disgust.confidence+
fear.confidence+
happiness.confidence+
neutral_mood.confidence+
sadness.confidence+
surprise.confidence)) %>%
mutate(anger = anger.confidence/z,
disgust = disgust.confidence/z,
fear = fear.confidence/z,
happiness = happiness.confidence/z,
neutral = neutral_mood.confidence/z,
sadness = sadness.confidence/z,
surprise = surprise.confidence/z)
#Create normalised GE values
Conf <- function(Emot){
ifelse(Emot=="VERY_UNLIKELY", 10,
ifelse(Emot == "UNLIKELY", 30,
ifelse(Emot == "POSSIBLE", 50,
ifelse(Emot == "LIKELY", 70,
ifelse(Emot == "VERY_LIKELY", 90, NA)))))
}
#confidence columns
GE <- GE %>% mutate(joyConf = Conf(joyLikelihood)) %>%
mutate(sorrowConf = Conf(sorrowLikelihood)) %>%
mutate(angerConf = Conf(angerLikelihood)) %>%
mutate(surpriseConf = Conf(surpriseLikelihood))
#proportion columns
GE <- GE %>%
rowwise %>%
mutate(neutralConf = 100 - (pmax(joyConf, sorrowConf, angerConf, surpriseConf))) %>%
mutate(z = (joyConf+
sorrowConf+
angerConf+
surpriseConf+
neutralConf)) %>%
mutate(anger = angerConf/z,
joy = joyConf/z,
neutral = neutralConf/z,
sorrow = sorrowConf/z,
surprise = surpriseConf/z)
#player name column
GE <- GE %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
ME <- left_join(ME, GF, by = "FileName")
SB <- left_join(SB, GF, by = c("aname"="FileName"))
library(dplyr)
GEP <- GE %>% dplyr::filter(detect == "Player")
MEP <- ME %>% dplyr::filter(detect == "Player")
SBP <- SB %>% dplyr::filter(detect == "Player")
img <- image_read("Figures/2016_CT6_R01_JMillman_AUS_vs_DSchwartzman_ARG_MS159_clip.0020.png")
p <- ggplot() + theme_void() + annotation_custom(rasterGrob(img)) +
coord_cartesian(xlim=c(0, 800), ylim=c(0,450))
p
knitr::kable(EmotionSoftwareSpecs, longtable=TRUE, booktabs = TRUE, caption="This details the capabilities we considered important in recognising emotions in images of faces.")
plotFaces <- function(imgList){
for(i in imgList){
img <- image_read(paste0("Faces/", i))
p <- ggplot(data.frame(x=c(0,350), y=c(0,350)), aes(x,y))+
theme_void() +
annotation_custom(rasterGrob(img)) +
coord_cartesian(xlim=c(0, 350), ylim=c(0,400))
}
return(p)
}
TableEmotions <- function(imgList){
for(i in imgList){
d <- DE %>% filter(FileName== i)
dl <- d %>%
select(Skybiometry = SEmotion, Microsoft = MEmotion, Google = GEmotion) %>%
gather(key = Software, value = Emotion, Microsoft, Skybiometry, Google)
t <- tableGrob(dl, theme = ttheme_minimal(core=list(fg_params=list(hjust=0, x=0.1)),
rowhead=list(fg_params=list(hjust=0, x=0))), rows = c("", "", ""))
}
return(t)
}
#Faces
f1 <- "face-1635-1-Go.png"
f2 <- "face-1128-1-Go.png"
f3 <- "face-1746-1-Go.png"
i1 <- plotFaces(f1)
i2 <- plotFaces(f2)
i3 <- plotFaces(f3)
# Tables of their resulting emotion value
t1 <- TableEmotions(f1)
t2 <- TableEmotions(f2)
t3 <- TableEmotions(f3)
#f4 <- "face-626-1-Go.png"
#f5 <- "face-450-1-Go.png"
#f6 <- "face-816-1-Go.png"
grid.arrange(i1, i2, i3, t1, t2, t3, nrow=2)
MEexample <- ME %>% subset(FileName=="face-1745-1-Go.png")
knitr::kable(MEexample[2:9], digits=6, longtable=TRUE, booktabs = TRUE, caption="The Microsoft API provided eight numerical values, one for each emotion.")
SBexample <- SB %>% subset(aname=="face-1745-1-Go.png") %>% select(ends_with(".confidence"))
knitr::kable(SBexample[3:9], digits=6, longtable=TRUE, booktabs = TRUE,
col.names = c("neutral", "anger", "disgust", "fear",
"happiness", "sadness", "surprise"),
caption="The Skybiometry API provided seven numerical Confidence values, one for each emotion.")
GEexample <- GE %>% subset(FileName=="face-1745-1-Go.png") %>% select(ends_with("Likelihood"))
knitr::kable(GEexample, longtable=TRUE, booktabs = TRUE,
col.names = c("joy", "sorrow", "anger", "surprise"),
caption="The Google Vision API provided four likelihood possibilities, one for each emotion.")
SBT <- SB %>% subset(aname=="face-1745-1-Go.png") %>% select(neutral, anger, disgust, fear, happiness, sadness, surprise)
knitr::kable(SBT, digits=6, longtable=TRUE, booktabs = TRUE,
caption="The Skybiometry API provided 7 numerical Confidence values, one for each emotion.")
Likelihood <-c("VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY")
Value <- c(10, 30, 50, 70, 90)
LT <- cbind(Likelihood, Value)
knitr::kable(LT, longtable=TRUE, booktabs = TRUE, caption="")
GET <- GEP %>% subset(FileName=="face-1745-1-Go.png") %>%
select(joy, sorrow, anger, surprise, neutral)
knitr::kable(GET, longtable=TRUE, booktabs = TRUE,
col.names = c("joy", "sorrow", "anger", "surprise", "neutral"),
caption="The Google Vision API provided four likelihoods, one for each emotion.")
gganG <- ggplot(GEP, aes(x=anger)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggjoG <- ggplot(GEP, aes(x=joy)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneG <- ggplot(GEP, aes(x=neutral)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsoG <- ggplot(GEP, aes(x=sorrow)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuG <- ggplot(GEP, aes(x=surprise)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganG,ggjoG,ggneG,ggsoG,ggsuG,nrow=2,
top=textGrob("Google Distribution of Emotion Porportions",
gp=gpar(fontsize=20,font=3)),
left = ("Percentage of Emotion values"))
gganS <- ggplot(SBP, aes(x=anger))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
gghaS <- ggplot(SBP, aes(x=happiness))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneS <- ggplot(SBP, aes(x=neutral))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsaS <- ggplot(SBP, aes(x=sadness))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuS <- ggplot(SBP, aes(x=surprise))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggdiS <- ggplot(SBP, aes(x=disgust))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggfeS <- ggplot(SBP, aes(x=fear))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganS, gghaS, ggneS, ggsaS, ggsuS, ggdiS, ggfeS,nrow=3,
top=textGrob("Skybiometry Distribution of Emotion Porportions",gp=gpar(fontsize=20,font=3)),
left = ("Percentage of Emotion values"))
gganM <- ggplot(MEP, aes(x=anger)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
gghaM <- ggplot(MEP, aes(x=happiness)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneM <- ggplot(MEP, aes(x=neutral)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsaM <- ggplot(MEP, aes (x=sadness)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuM <- ggplot(MEP, aes(x=surprise)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggdiM <- ggplot(MEP, aes(x=disgust)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggfeM <- ggplot(MEP, aes(x=fear)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggcoM <- ggplot(MEP, aes(x=contempt)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganM, gghaM, ggneM, ggsaM, ggsuM, ggdiM, ggfeM, ggcoM,nrow=3,
top=textGrob("Microsoft Distribution of Emotion Porportions", gp=gpar(fontsize=20,font=3)),
left =("Percentage of Emotion values"))
#Table including Google
#ftable(DE$GEmotion, DE$SEmotion, DE$MEmotion, dnn = c("Google", "Skybiometry", "Microsoft"))
ft<-ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
knitr::kable(as.matrix(ft), longtable=TRUE, booktabs = TRUE, caption="This shows the agreement between the emotions recognised by Microsoft and Skybiometry")
DEne<-DE %>% rowwise()%>%
mutate(GEneutral = ifelse(GEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(SEneutral = ifelse(SEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(MEneutral = ifelse(MEmotion=="neutral", "neutral","non-neutral"))
ftable( DEne$SEneutral, DEne$GEneutral, DEne$MEneutral, dnn = c( "Skybiometry", "Google","Microsoft"))
View(GEP)
is.na(GEP$anger)
sum(is.na(GEP$anger))
sum(is.na(MEP$anger))
sum(is.na(SBP$anger))
sum(is.na(J4$Microsoft))
J4 <- full_join(J3, S6, by = "FileName")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache=TRUE)
library(tidyverse)
library(dplyr)
library(readr)
library(GGally)
library(magick)
library(grid)
library(gridExtra)
library(ggplot2)
#Read in data files
ME <- read_csv("data/MicrosoftEmotions.csv")
SB <- read_csv("data/SkybiometryEmotions.csv")
GE <- read_csv("data/GoogleFacesEmotions.csv")
GF <- read_csv("data/GoogleFaces.csv")
DE <- read_csv("data/DominantEmotion.csv")
#
# MEP <- read_csv("data/MicrosoftEmotions.csv")
# SBP <- read_csv("data/SkybiometryEmotions.csv")
# GEP <- read_csv("data/GoogleFacesEmotions.csv")
EmotionSoftwareSpecs <- read_csv("Figures/EmotionSoftwareSpecifications.csv")
#Create normalised SB values
SB <- SB %>%
rowwise %>% mutate(z = (anger.confidence+
disgust.confidence+
fear.confidence+
happiness.confidence+
neutral_mood.confidence+
sadness.confidence+
surprise.confidence)) %>%
mutate(anger = anger.confidence/z,
disgust = disgust.confidence/z,
fear = fear.confidence/z,
happiness = happiness.confidence/z,
neutral = neutral_mood.confidence/z,
sadness = sadness.confidence/z,
surprise = surprise.confidence/z)
#Create normalised GE values
Conf <- function(Emot){
ifelse(Emot=="VERY_UNLIKELY", 10,
ifelse(Emot == "UNLIKELY", 30,
ifelse(Emot == "POSSIBLE", 50,
ifelse(Emot == "LIKELY", 70,
ifelse(Emot == "VERY_LIKELY", 90, NA)))))
}
#confidence columns
GE <- GE %>% mutate(joyConf = Conf(joyLikelihood)) %>%
mutate(sorrowConf = Conf(sorrowLikelihood)) %>%
mutate(angerConf = Conf(angerLikelihood)) %>%
mutate(surpriseConf = Conf(surpriseLikelihood))
#proportion columns
GE <- GE %>%
rowwise %>%
mutate(neutralConf = 100 - (pmax(joyConf, sorrowConf, angerConf, surpriseConf))) %>%
mutate(z = (joyConf+
sorrowConf+
angerConf+
surpriseConf+
neutralConf)) %>%
mutate(anger = angerConf/z,
joy = joyConf/z,
neutral = neutralConf/z,
sorrow = sorrowConf/z,
surprise = surpriseConf/z)
#player name column
GE <- GE %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
ME <- left_join(ME, GF, by = "FileName")
SB <- left_join(SB, GF, by = c("aname"="FileName"))
library(dplyr)
GEP <- GE %>% dplyr::filter(detect == "Player")
MEP <- ME %>% dplyr::filter(detect == "Player")
SBP <- SB %>% dplyr::filter(detect == "Player")
img <- image_read("Figures/2016_CT6_R01_JMillman_AUS_vs_DSchwartzman_ARG_MS159_clip.0020.png")
p <- ggplot() + theme_void() + annotation_custom(rasterGrob(img)) +
coord_cartesian(xlim=c(0, 800), ylim=c(0,450))
p
knitr::kable(EmotionSoftwareSpecs, longtable=TRUE, booktabs = TRUE, caption="This details the capabilities we considered important in recognising emotions in images of faces.")
plotFaces <- function(imgList){
for(i in imgList){
img <- image_read(paste0("Faces/", i))
p <- ggplot(data.frame(x=c(0,350), y=c(0,350)), aes(x,y))+
theme_void() +
annotation_custom(rasterGrob(img)) +
coord_cartesian(xlim=c(0, 350), ylim=c(0,400))
}
return(p)
}
TableEmotions <- function(imgList){
for(i in imgList){
d <- DE %>% filter(FileName== i)
dl <- d %>%
select(Skybiometry = SEmotion, Microsoft = MEmotion, Google = GEmotion) %>%
gather(key = Software, value = Emotion, Microsoft, Skybiometry, Google)
t <- tableGrob(dl, theme = ttheme_minimal(core=list(fg_params=list(hjust=0, x=0.1)),
rowhead=list(fg_params=list(hjust=0, x=0))), rows = c("", "", ""))
}
return(t)
}
#Faces
f1 <- "face-1635-1-Go.png"
f2 <- "face-1128-1-Go.png"
f3 <- "face-1746-1-Go.png"
i1 <- plotFaces(f1)
i2 <- plotFaces(f2)
i3 <- plotFaces(f3)
# Tables of their resulting emotion value
t1 <- TableEmotions(f1)
t2 <- TableEmotions(f2)
t3 <- TableEmotions(f3)
#f4 <- "face-626-1-Go.png"
#f5 <- "face-450-1-Go.png"
#f6 <- "face-816-1-Go.png"
grid.arrange(i1, i2, i3, t1, t2, t3, nrow=2)
MEexample <- ME %>% subset(FileName=="face-1745-1-Go.png")
knitr::kable(MEexample[2:9], digits=6, longtable=TRUE, booktabs = TRUE, caption="The Microsoft API provided eight numerical values, one for each emotion.")
SBexample <- SB %>% subset(aname=="face-1745-1-Go.png") %>% select(ends_with(".confidence"))
knitr::kable(SBexample[3:9], digits=6, longtable=TRUE, booktabs = TRUE,
col.names = c("neutral", "anger", "disgust", "fear",
"happiness", "sadness", "surprise"),
caption="The Skybiometry API provided seven numerical Confidence values, one for each emotion.")
GEexample <- GE %>% subset(FileName=="face-1745-1-Go.png") %>% select(ends_with("Likelihood"))
knitr::kable(GEexample, longtable=TRUE, booktabs = TRUE,
col.names = c("joy", "sorrow", "anger", "surprise"),
caption="The Google Vision API provided four likelihood possibilities, one for each emotion.")
SBT <- SB %>% subset(aname=="face-1745-1-Go.png") %>% select(neutral, anger, disgust, fear, happiness, sadness, surprise)
knitr::kable(SBT, digits=6, longtable=TRUE, booktabs = TRUE,
caption="The Skybiometry API provided 7 numerical Confidence values, one for each emotion.")
Likelihood <-c("VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY")
Value <- c(10, 30, 50, 70, 90)
LT <- cbind(Likelihood, Value)
knitr::kable(LT, longtable=TRUE, booktabs = TRUE, caption="")
GET <- GEP %>% subset(FileName=="face-1745-1-Go.png") %>%
select(joy, sorrow, anger, surprise, neutral)
knitr::kable(GET, longtable=TRUE, booktabs = TRUE,
col.names = c("joy", "sorrow", "anger", "surprise", "neutral"),
caption="The Google Vision API provided four likelihoods, one for each emotion.")
gganG <- ggplot(GEP, aes(x=anger)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggjoG <- ggplot(GEP, aes(x=joy)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneG <- ggplot(GEP, aes(x=neutral)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsoG <- ggplot(GEP, aes(x=sorrow)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuG <- ggplot(GEP, aes(x=surprise)) +
geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +
coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganG,ggjoG,ggneG,ggsoG,ggsuG,nrow=2,
top=textGrob("Google Distribution of Emotion Porportions",
gp=gpar(fontsize=20,font=3)),
left = ("Percentage of Emotion values"))
gganS <- ggplot(SBP, aes(x=anger))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
gghaS <- ggplot(SBP, aes(x=happiness))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneS <- ggplot(SBP, aes(x=neutral))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsaS <- ggplot(SBP, aes(x=sadness))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuS <- ggplot(SBP, aes(x=surprise))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggdiS <- ggplot(SBP, aes(x=disgust))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggfeS <- ggplot(SBP, aes(x=fear))+  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) +coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganS, gghaS, ggneS, ggsaS, ggsuS, ggdiS, ggfeS,nrow=3,
top=textGrob("Skybiometry Distribution of Emotion Porportions",gp=gpar(fontsize=20,font=3)),
left = ("Percentage of Emotion values"))
gganM <- ggplot(MEP, aes(x=anger)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
gghaM <- ggplot(MEP, aes(x=happiness)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggneM <- ggplot(MEP, aes(x=neutral)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsaM <- ggplot(MEP, aes (x=sadness)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggsuM <- ggplot(MEP, aes(x=surprise)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggdiM <- ggplot(MEP, aes(x=disgust)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggfeM <- ggplot(MEP, aes(x=fear)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
ggcoM <- ggplot(MEP, aes(x=contempt)) +  geom_histogram(binwidth=0.055, aes(y=..count../sum(..count..))) + coord_cartesian(xlim = c(0,1), ylim = c(0,1)) + ylab("")
grid.arrange(gganM, gghaM, ggneM, ggsaM, ggsuM, ggdiM, ggfeM, ggcoM,nrow=3,
top=textGrob("Microsoft Distribution of Emotion Porportions", gp=gpar(fontsize=20,font=3)),
left =("Percentage of Emotion values"))
#Table including Google
#ftable(DE$GEmotion, DE$SEmotion, DE$MEmotion, dnn = c("Google", "Skybiometry", "Microsoft"))
ft<-ftable(DE$SEmotion, DE$MEmotion, dnn = c("Skybiometry", "Microsoft"))
knitr::kable(as.matrix(ft), longtable=TRUE, booktabs = TRUE, caption="This shows the agreement between the emotions recognised by Microsoft and Skybiometry")
DEne<-DE %>% rowwise()%>%
mutate(GEneutral = ifelse(GEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(SEneutral = ifelse(SEmotion=="neutral", "neutral","non-neutral")) %>%
mutate(MEneutral = ifelse(MEmotion=="neutral", "neutral","non-neutral"))
# neutral flat table
nft<-ftable(DEne$SEneutral, DEne$GEneutral, DEne$MEneutral, dnn = c( "Skybiometry", "Google","Microsoft"))
knitr::kable(as.matrix(nft), longtable=TRUE, booktabs = TRUE, caption="This shows the agreement between non-neutral and neutral faces recognised by Goole, Microsoft and, Skybiometry. Only three faces were categorised as neutral. Of these, Google was much more likely to categorise as neutral. ")
S4 <- select(SBP, FileName = aname, Skybiometry = neutral)
S5 <- select(MEP, FileName, Microsoft = neutral)
S6 <- select(GEP, FileName, Google = neutral)
J3 <- full_join(S4, S5, by = "FileName")
J4 <- full_join(J3, S6, by = "FileName")
library(GGally)
ggscatmat(as.data.frame(na.omit(J4[,c(2:4)])), alpha = 0.4)
sum(is.na(J4$Skybiometry))
sum(is.na(J4$Microsoft))
sum(is.na(J4$Google))
table(is.na(J4$Google), is.na(J4$Microsoft))
table(!is.na(J4$Google), !is.na(J4$Microsoft), !is.na(J4$Skybiometry))
nfft<-ftable(!is.na(DE$Google), !is.na(DE$Microsoft), !is.na(DE$Skybiometry), dnn = c("Google", "Skybiometry", "Microsoft"))
!is.na(DE$SEmotion
!is.na(DE$SEmotion)
sum(is.na(DE$SEmotion))
nfft<-ftable(sum(!is.na(DE$Google)), sum(!is.na(DE$Microsoft)), sum(!is.na(DE$Skybiometry)), dnn = c("Google", "Skybiometry", "Microsoft"))
DE<-DE %>% rowwise() %>%
mutate(Gna = ifelse(is.na(GEmotion), TRUE, FALSE)) %>%
mutate(Sna = ifelse(is.na(SEmotion), TRUE, FALSE)) %>%
mutate(Mna = ifelse(is.na(MEmotion), TRUE, FALSE))
View(DE)
J4 <-J4 %>% rowwise() %>%
mutate(Gna = ifelse(is.na(GEmotion), TRUE, FALSE)) %>%
mutate(Sna = ifelse(is.na(SEmotion), TRUE, FALSE)) %>%
mutate(Mna = ifelse(is.na(MEmotion), TRUE, FALSE))
J4 <-J4 %>% rowwise() %>%
mutate(Gna = ifelse(is.na(Google), TRUE, FALSE)) %>%
mutate(Sna = ifelse(is.na(Skybiometry), TRUE, FALSE)) %>%
mutate(Mna = ifelse(is.na(Microsoft), TRUE, FALSE))
View(J4)
nfft<-ftable(J4$Gna, J4$Mna, J4$Sna, dnn = c("Google", "Microsoft", "Skybiometry"))
knitr::kable(as.matrix(nfft), longtable=TRUE, booktabs = TRUE, caption="This shows the agreement between the emotions recognised by Microsoft and Skybiometry")
J4 <-J4 %>% rowwise() %>%
mutate(Gna = ifelse(!is.na(Google), TRUE, FALSE)) %>%
mutate(Sna = ifelse(!is.na(Skybiometry), TRUE, FALSE)) %>%
mutate(Mna = ifelse(!is.na(Microsoft), TRUE, FALSE))
nfft<-ftable(J4$Gna, J4$Mna, J4$Sna, dnn = c("Google", "Microsoft", "Skybiometry"))
knitr::kable(as.matrix(nfft), caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
knitr::kable(as.matrix(nfft), caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
nfft
nfft
as.matrix(nfft)
knitr::kable(as.matrix(nfft), format="markdown", caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
knitr::kable(nfft, format="markdown", caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
install.packages("stargazer")
stargazer(format(nfft, quote=FALSE, justify="right"))
library(stargazer)
stargazer(format(nfft, quote=FALSE, justify="right"))
stargazer(format(nfft, quote=FALSE, justify="right"), type="latex", , caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
stargazer(format(nfft, quote=FALSE, justify="right"), type="latex", caption="This shows the amount of faces that Google, Microsoft and Skybiometry")
table<-stargazer(format(nfft, quote=FALSE, justify="right"), type="latex")
table
table[,4:18]
table[4:18]
stargazer(format(nfft, quote=FALSE, header=FALSE, justify="right"), type="latex")
stargazer(format(nfft, quote=FALSE, justify="right"),header=FALSE, type="latex")
stargazer(format(nft), header=FALSE, type = "latex", title =""This shows the agreement between non-neutral and neutral faces recognised by Goole, Microsoft and, Skybiometry. Only three faces were categorised as neutral. Of these, Google was much more likely to categorise as neutral.")
stargazer(format(nft), header=FALSE, type = "latex", title ="This shows the agreement between non-neutral and neutral faces recognised by Goole, Microsoft and, Skybiometry. Only three faces were categorised as neutral. Of these, Google was much more likely to categorise as neutral.")
