mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
GF <- read_csv("data/GoogleFaces.csv")
GF <- GF %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
GE <- GE %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
GE <- left_join(GF, GE1, by = c("file","minX","maxX","minY","maxY"))
colnames(GF)
colnames(GE)
GE <- GE %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
SBemots<-c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(SBP, aes(x=i))+geom_histogram(binwidth=0.025) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPan <- ggplot(SBP, aes(x=anger))+geom_histogram(binwidth=0.025) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPdi <- ggplot(SBP, aes(x=disgust))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPfe <- ggplot(SBP, aes(x=fear))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPha <- ggplot(SBP, aes(x=happiness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsa <- ggplot(SBP, aes(x=sadness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsu <- ggplot(SBP, aes(x=surprise))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
}
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(SBP, aes(x=i))+geom_histogram(binwidth=0.025) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPan <- ggplot(SBP, aes(x=anger))+geom_histogram(binwidth=0.025) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPdi <- ggplot(SBP, aes(x=disgust))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPfe <- ggplot(SBP, aes(x=fear))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPha <- ggplot(SBP, aes(x=happiness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsa <- ggplot(SBP, aes(x=sadness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsu <- ggplot(SBP, aes(x=surprise))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
# ggSBPan <- ggplot(SBP, aes(x=anger))+geom_histogram(binwidth=0.025) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPdi <- ggplot(SBP, aes(x=disgust))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPfe <- ggplot(SBP, aes(x=fear))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPha <- ggplot(SBP, aes(x=happiness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsa <- ggplot(SBP, aes(x=sadness))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
# ggSBPsu <- ggplot(SBP, aes(x=surprise))+geom_histogram(binwidth=0.055) +coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
emotionHistogram(SBP)
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
emotionHistogram(SBP)
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
}
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("neutral", "anger", "disgust", "fear", "happiness", "sadness", "surprise")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
emotionHistogram(SBP)
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
SBemots <- c("anger", "disgust", "fear", "happiness", "sadness", "surprise", "neutral")
for (i in 1:length(SBemots)) {
ggSBPne <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
#neutral???
emotionHistogram(SBP)
View(SBP)
colnames(SBP)
# always use SBP set, filter from that
emotionHistogram<-function(data, binwidth = 0.025, ylim = c(0,300)) {
for (i in 43:49) {
i <- ggplot(data, aes(x=i))+geom_histogram(binwidth=binwidth) +coord_cartesian(xlim = c(0, 1), ylim = ylim)
}
return(grid.arrange(ggSBPne,
ggSBPan,
ggSBPdi,
ggSBPfe,
ggSBPha,
ggSBPsa,
ggSBPsu, nrow=3))
}
#neutral???
emotionHistogram(SBP)
ME <- left_join(ME, GF, by = "FileName")
SB <- left_join(SB, GF, by = c("aname"="FileName"))
GEP <- GE %>% filter(detect=="Player")
MEP <- ME %>% filter(detect=="Player")
View(ME)
knitr::opts_chunk$set(echo = FALSE, message = F, warning = F, cache=T)
library(tidyverse)
library(readr)
library(GGally)
library(gridExtra)
#EmoM <-read_csv("data/EmotionsMerged.csv")
ME <- read_csv("data/MicrosoftEmotions.csv")
SB <- read_csv("data/SkybiometryEmotions.csv")
GE <- read_csv("data/GoogleFacesEmotions.csv")
GF <- read_csv("data/GoogleFaces.csv")
#ALLmetaIMGnamed <- read.csv("ALLmetaIMGnamed.csv")
# ALLmetaIMGnamedFaces<-ALLmetaIMGnamed%>%
#   filter(matchesManual)%>%
#   dplyr::select(-ID, -facecounter)%>%
#   mutate(fileID = as.numeric(factor(file))) %>%
#   mutate(FaceKey=paste(fileID, boxID, sep="-")) %>%
#   mutate(FaceID=paste(fileID, boxID, substring(type, 1,2), sep="-")) %>%
#   mutate(FileName=paste("face-", FaceID, ".png", sep=""))
#EmotionsMerged<-left_join(by="FileName", MicrosoftEmotions, ALLmetaIMGnamedFaces)
#EmotionsMerged<-write.csv(EmotionsMerged, "EmotionsMerged.csv", row.names = FALSE)
#EmotionsMerged<-EmotionsMerged %>% mutate(s = sum(anger, contempt, disgust, fear, happiness, neutral, sadness, surprise, na.rm=TRUE))
#Create column for Player Names
#GF$PlayerNumber<-NA
# PlayerSubset <- function(PlayerName, data = GF1) {
#
#   PlayerSet<-filter(data, player1==PlayerName | player2==PlayerName)
#
#   return(as.list(PlayerSet$FileName))
# }
#
# MSlist <- PlayerSubset("MSakkari")
# MSlist
GF <- GF %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
GE <- GE %>% rowwise %>%
mutate(playerName = ifelse(PlayerNumber == 1, player1,
ifelse(PlayerNumber == 2, player2,
ifelse(is.na(PlayerNumber), NA, NA))))
# GEsub <- GE[,c(1, 10:13, 17:24)]
#
# GE1 <- GEsub %>%
#   rowwise() %>%
#   mutate(minX = pmin(cbind(boundingPoly.x1, boundingPoly.x4)),
#          maxX = pmin(cbind(boundingPoly.x2, boundingPoly.x3)),
#          minY = pmin(cbind(boundingPoly.y1, boundingPoly.y2)),
#          maxY = pmin(cbind(boundingPoly.y3, boundingPoly.y4))) %>%
#   ungroup()
#
# GE1 <- GE1[,c(1:5, 14:17)]
#GE <- left_join(GF, GE1, by = c("file","minX","maxX","minY","maxY"))
ME <- left_join(ME, GF, by = "FileName")
SB <- left_join(SB, GF, by = c("aname"="FileName"))
View(ME)
MEP <- ME %>% filter(detect=="Player")
SBP <- SB %>% filter(detect=="Player")
GEP <- GE %>% filter(detect=="Player")
SBPplayer <- SBP %>% filter(playerName==Name)
Name<-"AFriedsam"
playerAnger <- function(Name){
SBPplayer <- SBP %>% filter(playerName==Name)
ggSBPan <- ggplot(SBP, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
GEPplayer <- GEP %>% filter(playerName==Name)
ggGEPan <- ggplot(GEP, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
MEPplayer <- MEP %>% filter(playerName==Name)
ggMEPan <- ggplot(MEP, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
}
ggSBPan
Name<-"AFriedsam"
playerAnger <- function(Name){
SBPplayer <- SBP %>% filter(playerName==Name)
ggSBPan <- ggplot(SBPplayer, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
GEPplayer <- GEP %>% filter(playerName==Name)
ggGEPan <- ggplot(GEPplayer, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
MEPplayer <- MEP %>% filter(playerName==Name)
ggMEPan <- ggplot(MEPplayer, aes(x=anger)) + geom_histogram(binwidth=0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0,300))
grid.arrange(ggMEPan,
ggSBPan,
ggGEPan,nrow=3)
}
Name <- "AFriedsam"
playerAnger <- function(Name) {
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
return(grid.arrange(ggMEPan,
ggSBPan,
ggGEPan, nrow = 3))
}
grid.arrange(ggMEPan,
ggSBPan,
ggGEPan, nrow = 3)
Name <- "AFriedsam"
playerAnger <- function(Name) {
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
}
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
SBPplayer <- SBP %>% filter(playerName == Name)
%>%
%>%
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggMEPan
ggSBPan
Create normalized SB values
```{r normaliseSB}
SB<-SB %>%
rowwise %>% mutate(z = (anger.confidence+
disgust.confidence+
fear.confidence+
happiness.confidence+
neutral_mood.confidence+
sadness.confidence+
surprise.confidence))
SB<-SB %>%
mutate(anger = anger.confidence/z,
disgust = disgust.confidence/z,
fear = fear.confidence/z,
happiness = happiness.confidence/z,
neutral = neutral_mood.confidence/z,
sadness = sadness.confidence/z,
surprise = surprise.confidence/z)
```
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggSBPan
SBP <- SB %>% filter(detect=="Player")
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggSBPan
ggGEPan
```{r normaliseGE}
Conf <- function(Emot){
ifelse(Emot=="VERY_UNLIKELY", 10,
ifelse(Emot == "UNLIKELY", 30,
ifelse(Emot == "POSSIBLE", 50,
ifelse(Emot == "LIKELY", 70,
ifelse(Emot == "VERY_LIKELY", 90, NA)))))
}
GE <- GE %>% mutate(joyConf = Conf(joyLikelihood)) %>%
mutate(sorrowConf = Conf(sorrowLikelihood)) %>%
mutate(angerConf = Conf(angerLikelihood)) %>%
mutate(surpriseConf = Conf(surpriseLikelihood))
GE <- GE %>%
rowwise %>%
mutate(neutralConf = 100 - (pmax(joyConf, sorrowConf, angerConf, surpriseConf))) %>%
mutate(z = (joyConf+sorrowConf+angerConf+surpriseConf+neutralConf)) %>%
mutate(anger = angerConf/z,
joy = joyConf/z,
neutral = neutralConf/z,
sorrow = sorrowConf/z,
surprise = surpriseConf/z)
```
Name <- "AFriedsam"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
colnames(SBPplayer)
colnames(GEPplayer)
GEP <- GE %>% filter(detect=="Player")
Name <- "AFriedsam"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 300))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
Name <- "AFriedsam"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.025) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
Name <- "AFriedsam"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggplot(SBP, aes(x=playerName))+geom_bar()
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
Name <- "TBerdych"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggplot(SBPplayer, aes(x = "anger")) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
Name <- "TBerdych"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
TB<- as.list(MEPplayer$FileName))
TB<- as.list(MEPplayer$FileName)
DisplayFaces(TB)
MSimgsG<-GEPCL1 %>% filter(player1=="ARadwanska")
MSimgsG <-MSimgsG %>% filter(detect=="Player")
MSlist <- as.list(MSimgsG$FileName)
length(MSlist)
library(imager)
DisplayFaces <- function(list) {
for (i in 1:length(list)){
devAskNewPage()
plot(load.image(paste0("Faces/", list[i])),
main = paste0(i, list[i]))
}
}
DisplayFaces(TB)
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
ggplot(na.omit(SBP), aes(x=order(playerName)))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
ggplot(na.omit(SBP), aes(x=playerName))+geom_bar()+ theme(axis.text.x = element_text(angle = 20))
Name <- "GSimon"
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1)) + main("Skybiometry")
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1)) + title("Skybiometry")
ggSBPan <-
ggplot(SBPplayer, aes(x = anger), main=("Skybiometry")) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
ggSBPan
ggSBPan <-
ggplot(SBPplayer, aes(x = anger), title=("Skybiometry")) +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
ggSBPan
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) + ggtitle("Skybiometry")
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) + ggtitle("Skybiometry") +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
Name <- "GSimon"
SBPplayer <- SBP %>% filter(playerName == Name)
ggSBPan <-
ggplot(SBPplayer, aes(x = anger)) + ggtitle("Skybiometry") +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
GEPplayer <- GEP %>% filter(playerName == Name)
ggGEPan <-
ggplot(GEPplayer, aes(x = anger)) +  ggtitle("Google") +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
MEPplayer <- MEP %>% filter(playerName == Name)
ggMEPan <-
ggplot(MEPplayer, aes(x = anger)) +  ggtitle("Microsoft") +
geom_histogram(binwidth = 0.05) + coord_cartesian(xlim = c(0, 1))
grid.arrange(ggMEPan,ggSBPan,ggGEPan, nrow = 3)
colnames(SBPplayer)
<- ggparcoord(data = SBPplayer, columns = 44:%0, groupColumn="file", order = "allClass")
ggparcoord(data = SBPplayer, columns = 44:%0, groupColumn="file", order = "allClass")
ggparcoord(data = SBPplayer, columns = 44:50, groupColumn="file", order = "allClass")
ggparcoord(data = SBPplayer, columns = 44:50, order = "allClass")
ggparcoord(data = SBPplayer, columns = 44:50)
?ggparcoord
