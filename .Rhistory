}
GlmModelCreation <- function(model, data = ALLmetaIMGnamedFaces) {
glmFits <- data %>%
split(.$FaceKey) %>%
map_df(~ hitmiss(.)) %>%
split(.$type) %>%
map(~ glm(model, data = dplyr::select(., -type, -file), binomial(link = "logit")))
}
ConvertModel2Table <- function(model){
model %>%
summary %>%
coef %>%
as.data.frame %>%
cbind %>%
rownames_to_column %>%
cbind %>%
dplyr::rename(variable = rowname)
}
GlmModelEstimates <- function(model, data = GlmModelCreation(model)){
glmSummary <- data %>%
map(~ ConvertModel2Table(.))
glmPlot <- do.call(rbind, Map(cbind, glmSummary, type = names(glmSummary)))
return(glmPlot)
}
GlmModelEstimates <- function(model, data = GlmModelCreation(model)){
glmSummary <- data %>%
map(~ ConvertModel2Table(.))
glmPlot <- do.call(rbind, Map(cbind, glmSummary, type = names(glmSummary)))
return(glmPlot)
}
# SignificancePlot <- function(model, data = GlmModelEstimates(model)) {
#   data %>%
#   mutate(significant = `Pr(>|z|)` < 0.05) %>%
#   ggplot(aes(x=type, y=`Pr(>|z|)`)) +
#   geom_col(aes(fill=significant)) +
#   facet_wrap(~ variable) +
#   coord_flip()
# }
EstimatesPlot <- function(model, data = GlmModelEstimates(model)) {
data %>%
mutate(significant = `Pr(>|z|)` < 0.05) %>%
ggplot(aes(x=type, y=Estimate)) +
geom_col(aes(fill=significant)) +
facet_wrap(~ variable, scales="free_x", labeller=label_wrap_gen(width = 25, multi_line = TRUE)) +
coord_flip()
}
ModelPlotResults<-function(model, data = GlmModelEstimates(model)){
ep<-EstimatesPlot(model, data)
#sp<- SignificancePlot(model, data)
grid.arrange(ep)#, sp)
}
ModelPlotResults(hit ~ shotangle + bg + bg*shotangle + graphic + situation + lighting + glasses + visorhat)
library(ggmosaic)
#dev tools version has scale_y_productlist but cannot use it yet
ggplot(data=ALLmetaIMGnamedFaces) +
geom_mosaic(aes(x=product(shotangle), fill=matchesManual)) +
#geom_text(aes(label="test", x=1, y=0.6)) +
guides(fill = guide_legend(title="API faces match \nmanual faces"))  +
labs(caption="There is a greater amount of API faces that matched the faces found manually than those that did not match. However given the face was captured from a birds eye angle there were less faces that matched those found manually. The most common faces in our set were those captured at Player Shoulder Height and found manually and by an APIs.") +
ylab("Proportion of faces") + xlab("Angle the face was captured from ")
why <- ALLmetaIMGnamed %>% filter(is.na(shotangle))
View(why)
why$file
why <- ALLmetaIMG %>% filter(is.na(shotangle))
ALLmetaIMGnamed<-read_csv("data/ALLmetaIMGnamed.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
why <- ALLmetaIMGnamed %>% filter(is.na(shotangle))
View(why)
ALLmetaIMG<-read_csv("data/ALLmetaIMG.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
ALLmetaIMG$graphic<-factor(ALLmetaIMG$graphic, levels = 0:1, labels = c("Live image", "Graphic"))
ALLmetaIMG$person<-factor(ALLmetaIMG$person, levels = 0:1, labels = c("No Person", "Person"))
ALLmetaIMG$situation<-factor(ALLmetaIMG$situation, levels = 0:5, labels = c("Court in play", "Court player close-up", "Court close-up not player", "Crowd", "Off court close up of player", "Transition"))
ALLmetaIMG$bg<-factor(ALLmetaIMG$bg, levels = 0:3, labels = c("Crowd", "Court", "Logo wall", "Not applicable"))
ALLmetaIMG$shotangle<-factor(ALLmetaIMG$shotangle, levels = 0:2, labels = c("Player Shoulder Height", "Birds Eye", "Upward Angle"))
ALLmetaIMG$detect<-factor(ALLmetaIMG$detect, levels = 0:2, labels = c("Player", "Other staff on court", "Fan"))
ALLmetaIMG$obscured<-factor(ALLmetaIMG$obscured, levels = 0:1, labels = c("No", "Yes"))
ALLmetaIMG$lighting<-factor(ALLmetaIMG$lighting, levels = 1:2, labels = c("Shaded", "Partially shaded"))
ALLmetaIMG$headangle<-factor(ALLmetaIMG$headangle, levels = 0:3, labels = c("Front on", "Back of head", "Profile", "Other"))
ALLmetaIMG$glasses<-factor(ALLmetaIMG$glasses, levels = 0:1, labels = c("No", "Yes"))
ALLmetaIMG$visorhat<-factor(ALLmetaIMG$visorhat, levels = 0:1, labels = c("No", "Yes"))
ALLmetaIMG$headangle <- as.character(ALLmetaIMG$headangle)
ALLmetaIMG$headangle[ALLmetaIMG$headangle == "Back of head"] <- "Other"
ALLmetaIMG$headangle <- as.factor(ALLmetaIMG$headangle)
write.csv(ALLmetaIMG, "ALLmetaIMGnamed.csv", row.names = FALSE)
ALLmetaIMGnamed<-read_csv("data/ALLmetaIMGnamed.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
why <- ALLmetaIMGnamed %>% filter(is.na(shotangle))
ALLmetaIMGnamed<-read_csv("data/ALLmetaIMGnamed.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
why <- ALLmetaIMGnamed %>% filter(is.na(shotangle))
library(ggmosaic)
#add hit miss column to the data frame used in plotting below
#The odds of a face found by one of the APIs matching a face found manually is  r or times higher when the camera angled captured the face from Player Shoulder Height as opposed to a Birds Eye shot.
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=shotangle, fill = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="T") +
ylab("Proportion of faces") + xlab("Angle the face was captured from ")
ALLmetaIMGnamedFaces<-ALLmetaIMGnamed%>%
filter(!is.na(type)) %>%
dplyr::select(-ID, -facecounter)%>%
mutate(fileID = as.numeric(factor(file))) %>%
mutate(FaceKey=paste(fileID, boxID, sep="-")) %>%
mutate(FaceID=paste(fileID, boxID, substring(type, 1,2), sep="-"))
ALLmetaIMGnamedFaces<-ALLmetaIMGnamed%>%
filter(!is.na(type)) %>%
dplyr::select(-ID, -facecounter)%>%
mutate(fileID = as.numeric(factor(file))) %>%
mutate(FaceKey=paste(fileID, boxID, sep="-")) %>%
mutate(FaceID=paste(fileID, boxID, substring(type, 1,2), sep="-"))
```{r DoubleDecker, fig.cap = "\\label{fig:DoubleDecker}"}
library(ggmosaic)
#add hit miss column to the data frame used in plotting below
#The odds of a face found by one of the APIs matching a face found manually is  r or times higher when the camera angled captured the face from Player Shoulder Height as opposed to a Birds Eye shot.
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=shotangle, fill = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="T") +
ylab("Proportion of faces") + xlab("Angle the face was captured from ")
?stargazer
??stargazer
install.packages("stargazer")
library(stargazer)
stargazer(ct)
NoManual<-ALLmetaIMGnamed %>% filter(ALLmetaIMGnamed$type!="Manual")
NoManual<-NoManual %>% droplevels(NoManual$type)
ct<-CrossTable(table(NoManual$matchesManual, NoManual$type),
prop.chisq = FALSE,
digits=4,
expected = FALSE,
prop.r = TRUE, prop.c = TRUE, prop.t = TRUE,
drop.levels = TRUE, format = ("SPSS"), cell.layout = FALSE,
dnn = NULL)
stargazer(ct)
#stargazer table
class(ct)
?stargazer
NoManual<-ALLmetaIMGnamed %>% filter(ALLmetaIMGnamed$type!="Manual")
NoManual<-NoManual %>% droplevels(NoManual$type)
ct<-CrossTable(table(NoManual$matchesManual, NoManual$type),
prop.chisq = FALSE,
digits=4,
expected = FALSE,
prop.r = TRUE, prop.c = TRUE, prop.t = TRUE,
drop.levels = TRUE, format = ("SPSS"), cell.layout = FALSE,
dnn = NULL)
ct
#stargazer table
install.packages("huxtable")
library(huxtable)
?huxtable
ct<-CrossTable(table(NoManual$matchesManual, NoManual$type),
prop.chisq = FALSE,
digits=4,
expected = FALSE,
prop.r = TRUE, prop.c = TRUE, prop.t = TRUE,
drop.levels = TRUE, format = ("SPSS"), cell.layout = FALSE,
dnn = NULL)
as_huxtable(ct)
kable(ct)
?CrossTable
print.CrossTable(ct)
plot.CrossTable(ct)
plot(ct)
liibrary()
?huxtable
ftable(ct)
ftable(NoManual$matchesManual, NoManual$type)
?ftable
ct<-CrossTable(table(NoManual$matchesManual, NoManual$type),
prop.chisq = FALSE,
digits=4,
expected = FALSE,
prop.r = TRUE, prop.c = TRUE, prop.t = TRUE,
drop.levels = TRUE, format = ("SPSS"), cell.layout = FALSE,
dnn = NULL)
pander(ct)
?pander
kable(ct)
pander(ct)
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(fill=glasses, x = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
summary(ALLmetaIMGnamed)
ALLmetaIMG<-read_csv("data/ALLmetaIMG.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
summary(ALLmetaIMG)
ALLmetaIMGPlayers<- ALLmetaIMG %>% filter(detect=="Player")
summary(ALLmetaIMG)
colnames(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player") %>%
select(., graphic:visorhat)
summary(ALLmetaIMGPlayers)
table(ALLmetaIMGPlayers)
summary(ALLmetaIMGPlayers)
head(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player") %>%
select(graphic:visorhat)
head(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player") %>%
dplyr::select(graphic,person,situation,bg, shotangle,visorhat,
detect, obscured, lightning, headangle, glasses, visorhat)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player") %>%
dplyr::select(graphic,person,situation,bg, shotangle,visorhat,
detect, obscured, lighting, headangle, glasses, visorhat)
head(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player") %>%
dplyr::select(graphic,person,situation,bg, shotangle,visorhat,
detect, obscured, lighting, headangle, glasses, visorhat)
head(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG
ALLmetaIMGPlayers <- ALLmetaIMG
head(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect=="Player")
head(ALLmetaIMGPlayers)
table(ALLmetaIMG$detect)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
filter(detect==0) %>%
dplyr::select(graphic,person,situation,bg, shotangle,visorhat,
detect, obscured, lighting, headangle, glasses, visorhat)
head(ALLmetaIMGPlayers)
summary(ALLmetaIMGPlayers)
ALLmetaIMGPlayers <- ALLmetaIMG %>%
#filter(detect==0) %>%
dplyr::select(graphic,person,situation,bg, shotangle,visorhat,
detect, obscured, lighting, headangle, glasses, visorhat)
summary(ALLmetaIMGPlayers)
ggplot(data=ALLmetaIMGPlayer) +
geom_bar(aes(fill=glasses, x = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data=ALLmetaIMGPlayers) +
geom_bar(aes(fill=glasses, x = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data=ALLmetaIMGPlayers) +
geom_bar(aes(fill = glasses, x = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data=ALLmetaIMGPlayers) +
geom_bar(aes(x = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data=ALLmetaIMGPlayers) +
geom_bar(aes(x = glasses, fill = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ALLmetaIMGnamed<-read_csv("data/ALLmetaIMGnamed.csv", col_types = cols(type = col_factor(levels = c("Manual", "Animetrics", "Google", "Microsoft", "Skybiometry"))))
ALLmetaIMGPlayers<- ALLmetaIMGnamed %>% filter(detect=="Player")
ALLmetaIMGnamedFaces<-ALLmetaIMGnamed%>%
filter(!is.na(type)) %>%
dplyr::select(-ID, -facecounter)%>%
mutate(fileID = as.numeric(factor(file))) %>%
mutate(FaceKey=paste(fileID, boxID, sep="-")) %>%
mutate(FaceID=paste(fileID, boxID, substring(type, 1,2), sep="-"))
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = glasses, fill = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGnamedFaces) +
geom_bar(aes(x = glasses, fill = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = glasses, fill = visorhat),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=shotangle, fill = situation),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=situation, fill = shotangle),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=situation, fill = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(fill=situation, x = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(fill=shotangle, x = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data=ALLmetaIMGnamedFaces) +
geom_bar(aes(x=shotangle, fill = bg),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Angle the face was captured from")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = detect),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = obscured),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = lighting),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = headangle),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = visorhat, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = obscured, fill = lighting),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = obscured, fill = headangle),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = obscured, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = lighting, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = lighting, fill = headangle),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = lighting, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = headangle, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = lighting, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
ggplot(data = ALLmetaIMGPlayers) +
geom_bar(aes(x = obscured, fill = glasses),
position = position_stack(reverse = TRUE),
na.rm=TRUE) +
coord_flip() +
guides(fill = guide_legend(title="Background")) +
labs(caption="") +
ylab("Amount of faces") + xlab("Wearing glasses")
install.packages(c(
"car",
"dispmod",
"earth",
"effects",
"faraway",
"gam",
"ggfortify",
"glmm",
"glmnet",
"KernSmooth",
"knitr",
"lme4",
"MASS",
"mgcv",
"nlme",
"pbkrtest",
"R330",
"RLRsim",
"rmarkdown",
"tidyverse",
"VGAM"),
dependencies = TRUE)
install.packages(c("car", "dispmod", "earth", "effects", "faraway", "gam", "ggfortify", "glmm", "glmnet", "KernSmooth", "knitr", "lme4", "MASS", "mgcv", "nlme", "pbkrtest", "R330", "RLRsim", "rmarkdown", "tidyverse", "VGAM"), dependencies = TRUE)
